{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","to","Footer","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c551a6a8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n    <button \r\n        onClick={onClick}\r\n        style={{ backgroundColor: color }} \r\n        className='btn'>{text}</button> \r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button \r\n            color={showAdd ? 'red' : 'green'} \r\n            text={showAdd ? 'Close' : 'Add'} \r\n            onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Manager',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\n\r\n\r\n//You can do CSS in JS and set style w/ single curly braces\r\n// const headingStyle = {\r\n//     color: 'red',\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n        className={`task ${task.reminder ? \r\n        'reminder' : ''}` } \r\n        onDoubleClick={() => onToggle(task.id)}\r\n        >\r\n            \r\n            <h3>{task.text} <FaTimes style={{ color: \r\n                'red', cursor: 'pointer' }} \r\n                onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nexport const Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <> \r\n            {tasks.map((task) => (\r\n            <Task key={task.id} task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n        \r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task'\r\n                value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Day & Time'\r\n                 value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" \r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type=\"submit\" className='btn btn-block' value='Save Task'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4> Version 1.0.0 </h4>\r\n            <Link to=\"/\">Go Back </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p> Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport Footer from './components/Footer'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n//Fetch Data\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:3000/tasks')\n  const data = await res.json()\n\n  return data\n}\n\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:3000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n}\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:3000/tasks', {\n    method: 'POST',\n    headers:  {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n}\n\n//Delete Task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:3000/tasks/${id}`, {\n    method: 'DELETE'\n  })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n    method: 'PUT',\n    headers:  {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updatedTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? { ...task, reminder: \n      !task.reminder} : task\n    )\n  )\n}\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}/>\n        \n        <Route path='/' exact render={(props) => (\n         <>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? <Tasks tasks={tasks} \n          onDelete={deleteTask}\n          onToggle={toggleReminder} /> : 'No Tasks here yet' }\n          </>\n        )} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}